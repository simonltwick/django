# Generated by Django 5.2.3 on 2025-09-11 21:08

import datetime
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models



# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# bike.migrations.0030_auto_20200727_1535

class Migration(migrations.Migration):

    replaces = [('bike', '0001_initial'), ('bike', '0002_ride_description'), ('bike', '0003_auto_20200512_1521'), ('bike', '0004_auto_20200512_1543'), ('bike', '0005_auto_20200512_1548'), ('bike', '0006_preferences'), ('bike', '0007_auto_20200512_1625'), ('bike', '0008_auto_20200516_1239'), ('bike', '0009_auto_20200520_0944'), ('bike', '0010_auto_20200521_2117'), ('bike', '0011_auto_20200521_2138'), ('bike', '0012_auto_20200522_1044'), ('bike', '0013_auto_20200527_1030'), ('bike', '0014_auto_20200527_1051'), ('bike', '0015_auto_20200527_1053'), ('bike', '0016_auto_20200527_1056'), ('bike', '0017_auto_20200527_2319'), ('bike', '0018_auto_20200527_2320'), ('bike', '0019_auto_20200528_1254'), ('bike', '0020_auto_20200529_1646'), ('bike', '0021_odometer_rider'), ('bike', '0022_auto_20200529_2140'), ('bike', '0023_auto_20200530_1112'), ('bike', '0024_auto_20200530_1158'), ('bike', '0025_auto_20200601_1541'), ('bike', '0026_bike_current_odo'), ('bike', '0027_auto_20200727_1127'), ('bike', '0028_auto_20200727_1201'), ('bike', '0029_auto_20200727_1532'), ('bike', '0030_auto_20200727_1535'), ('bike', '0031_auto_20210503_1744'), ('bike', '0032_auto_20210520_2013'), ('bike', '0033_auto_20210522_2055'), ('bike', '0034_auto_20210522_2117'), ('bike', '0035_auto_20210522_2123'), ('bike', '0036_maintenanceactionhistory_bike'), ('bike', '0037_maintenanceaction_due_distance'), ('bike', '0038_auto_20210525_2015'), ('bike', '0039_auto_20210525_2059'), ('bike', '0040_auto_20210531_1157'), ('bike', '0041_auto_20210703_1119'), ('bike', '0042_auto_20210706_1706'), ('bike', '0043_auto_20210720_1634'), ('bike', '0044_auto_20210720_1729'), ('bike', '0045_component_previous_distance_component_start_odo_and_more'), ('bike', '0046_alter_ride_description'), ('bike', '0047_auto_20250528_2007')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(max_length=200)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bikes', to=settings.AUTH_USER_MODEL)),
                ('current_odo', models.FloatField(default=0, help_text='calculated current odometer, in distance units from preferences.')),
            ],
        ),
        migrations.CreateModel(
            name='ComponentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('subtype_of', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='subtypes', to='bike.componenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='component_types', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Component',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('specification', models.CharField(blank=True, max_length=200, null=True)),
                ('date_acquired', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('supplier', models.CharField(blank=True, max_length=200, null=True)),
                ('notes', models.CharField(blank=True, max_length=400, null=True)),
                ('bike', models.ForeignKey(blank=True, help_text='Leave blank if this is a subcomponent of another part of a bike.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='components', to='bike.bike')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='components', to=settings.AUTH_USER_MODEL)),
                ('subcomponent_of', models.ForeignKey(blank=True, help_text='leave blank if this is a direct subcomponent of a bike', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='components', to='bike.component')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bike.componenttype')),
            ],
        ),
        migrations.CreateModel(
            name='ComponentChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.FloatField(blank=True, null=True)),
                ('distance_units', models.PositiveSmallIntegerField(choices=[(10, 'miles'), (20, 'kilometres')], default=10)),
                ('date', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('description', models.CharField(max_length=200)),
                ('changed_component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='component_history', to='bike.component')),
                ('parent_component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcomponent_history', to='bike.component')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Preferences',
            fields=[
                ('distance_units', models.PositiveSmallIntegerField(choices=[(10, 'miles'), (20, 'kilometres')], default=10)),
                ('ascent_units', models.PositiveSmallIntegerField(choices=[(1, 'm'), (2, 'Ft')], default=1)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='preferences', serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'preferences',
            },
        ),
        migrations.CreateModel(
            name='Ride',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.FloatField(blank=True, null=True)),
                ('distance_units', models.PositiveSmallIntegerField(choices=[(10, 'miles'), (20, 'kilometres')], default=10)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('ascent', models.FloatField(blank=True, null=True)),
                ('ascent_units', models.PositiveSmallIntegerField(choices=[(1, 'm'), (2, 'Ft')], default=1)),
                ('bike', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rides', to='bike.bike')),
                ('rider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rides', to=settings.AUTH_USER_MODEL)),
                ('description', models.CharField(blank=True, max_length=400, null=True)),
                ('is_adjustment', models.BooleanField(default=False, help_text='If true, signifies this is not a real ride but a ride distance adjustment between odometer readings.')),
            ],
            options={
                'abstract': False,
                'unique_together': {('rider', 'date', 'bike', 'description')},
            },
        ),
        migrations.CreateModel(
            name='MaintenanceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity', models.CharField(max_length=200)),
                ('reference_info', models.CharField(blank=True, max_length=300, null=True)),
                ('recurring', models.BooleanField(default=False)),
                ('maintenance_interval', models.PositiveIntegerField(blank=True, null=True)),
                ('maint_interval_units', models.PositiveSmallIntegerField(blank=True, choices=[(101, 'Miles'), (102, 'Kilometres'), (103, 'Days'), (104, 'Years')], null=True)),
                ('component_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bike.componenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_types', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('component_type', 'activity')},
            },
        ),
        migrations.AddField(
            model_name='componenttype',
            name='maintenance_type',
            field=models.ManyToManyField(to='bike.maintenancetype'),
        ),
        migrations.CreateModel(
            name='Odometer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.FloatField()),
                ('distance_units', models.PositiveSmallIntegerField(choices=[(10, 'miles'), (20, 'kilometres')], default=10)),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
                ('bike', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='odometer_readings', to='bike.bike')),
                ('initial', models.BooleanField(default=False, help_text='Only tick this for the initial value of new odometer or after resetting the odometer reading.')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('adjustment_ride', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bike.ride')),
                ('rider', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'verbose_name': 'Odometer reading',
            },
        ),
        migrations.CreateModel(
            name='MaintenanceAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.FloatField(blank=True, null=True)),
                ('distance_units', models.PositiveSmallIntegerField(choices=[(10, 'miles'), (20, 'kilometres')], default=10)),
                ('completed_date', models.DateField(blank=True, null=True)),
                ('component', models.ForeignKey(blank=True, help_text='you only need to specify one of bike or component.', null=True, on_delete=django.db.models.deletion.CASCADE, to='bike.component')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_actions', to=settings.AUTH_USER_MODEL)),
                ('maint_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bike.maintenancetype')),
                ('bike', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maint_actions', to='bike.bike')),
                ('completed', models.BooleanField(default=False)),
                ('completed_distance', models.FloatField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('due_date', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('maint_interval_units', models.PositiveSmallIntegerField(blank=True, choices=[(101, 'Miles'), (102, 'Kilometres'), (103, 'Days'), (104, 'Years')], null=True)),
                ('maintenance_interval', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
                'unique_together': {('user', 'bike', 'component', 'maint_type', 'description', 'due_date', 'distance')},
            },
        ),
        migrations.CreateModel(
            name='MaintenanceActionHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('distance', models.FloatField(blank=True, null=True)),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='maintenance_action', to='bike.maintenanceaction')),
                ('distance_units', models.PositiveSmallIntegerField(choices=[(10, 'miles'), (20, 'kilometres')], default=10)),
            ],
        ),
        # """ this manual migration (and reverse migration ) are no longer required.
        # They migrated old style completed MaintenanceActions to
        # MaintenanceActionHistory objects.   Since they've all been migrated,
        # the manual migration can be ignored. 
        # migrations.RunPython(
        #     # code=bike.migrations.0030_auto_20200727_1535.migrate_completed_maint,
        #     code=func_0030_auto_20200727_1535.migrate_completed_maint,
        #     reverse_code=bike.migrations.0030_auto_20200727_1535.revert_completed_maint,
        # ), """
        migrations.AlterModelOptions(
            name='maintenanceactionhistory',
            options={'verbose_name_plural': 'Maintenance action history'},
        ),
        migrations.RenameField(
            model_name='odometer',
            old_name='initial',
            new_name='initial_value',
        ),
        migrations.RemoveField(
            model_name='componenttype',
            name='maintenance_type',
        ),
        migrations.AlterField(
            model_name='odometer',
            name='initial_value',
            field=models.BooleanField(default=False),
        ),
        migrations.RenameField(
            model_name='maintenanceaction',
            old_name='maint_interval_units',
            new_name='maint_interval_distance_units',
        ),
        migrations.RenameField(
            model_name='maintenanceaction',
            old_name='maintenance_interval',
            new_name='maintenance_interval_distance',
        ),
        migrations.RenameField(
            model_name='maintenancetype',
            old_name='maint_interval_units',
            new_name='maint_interval_distance_units',
        ),
        migrations.RenameField(
            model_name='maintenancetype',
            old_name='maintenance_interval',
            new_name='maintenance_interval_distance',
        ),
        migrations.AddField(
            model_name='maintenanceaction',
            name='maint_interval_days',
            field=models.PositiveSmallIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='maintenancetype',
            name='maint_interval_days',
            field=models.PositiveSmallIntegerField(blank=True, null=True),
        ),
        migrations.RenameField(
            model_name='maintenanceactionhistory',
            old_name='date',
            new_name='completed_date',
        ),
        migrations.RenameField(
            model_name='maintenancetype',
            old_name='activity',
            new_name='description',
        ),
        migrations.AddField(
            model_name='maintenanceaction',
            name='recurring',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='maintenanceactionhistory',
            name='component',
            field=models.ForeignKey(blank=True, help_text='you only need to specify one of bike or component.', null=True, on_delete=django.db.models.deletion.CASCADE, to='bike.component'),
        ),
        migrations.AddField(
            model_name='maintenanceactionhistory',
            name='description',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='maintenanceaction',
            name='description',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='maintenancetype',
            name='component_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_type', to='bike.componenttype'),
        ),
        migrations.AlterUniqueTogether(
            name='maintenancetype',
            unique_together={('component_type', 'description')},
        ),
        migrations.AlterField(
            model_name='maintenanceactionhistory',
            name='distance_units',
            field=models.PositiveSmallIntegerField(choices=[(10, 'miles'), (20, 'kilometres')], default=10),
        ),
        migrations.AddField(
            model_name='maintenanceactionhistory',
            name='bike',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maint_history', to='bike.bike'),
        ),
        migrations.AddField(
            model_name='maintenanceaction',
            name='due_distance',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterUniqueTogether(
            name='maintenanceaction',
            unique_together={('user', 'bike', 'component', 'maint_type', 'description', 'due_date', 'due_distance')},
        ),
        migrations.RemoveField(
            model_name='maintenanceaction',
            name='completed_date',
        ),
        migrations.RemoveField(
            model_name='maintenanceaction',
            name='completed_distance',
        ),
        migrations.RemoveField(
            model_name='maintenanceaction',
            name='distance',
        ),
        migrations.RemoveField(
            model_name='maintenanceaction',
            name='distance_units',
        ),
        migrations.RemoveField(
            model_name='maintenanceaction',
            name='maint_interval_distance_units',
        ),
        migrations.RemoveField(
            model_name='maintenancetype',
            name='maint_interval_distance_units',
        ),
        migrations.AddField(
            model_name='preferences',
            name='maint_distance_limit',
            field=models.PositiveSmallIntegerField(blank=True, default=100, null=True, verbose_name='Upcoming maintenance distance limit'),
        ),
        migrations.AddField(
            model_name='preferences',
            name='maint_time_limit',
            field=models.DurationField(blank=True, default=datetime.timedelta(days=10), null=True, verbose_name='Upcoming maintenance time limit'),
        ),
        migrations.AlterField(
            model_name='maintenancetype',
            name='component_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_types', to='bike.componenttype'),
        ),
        migrations.AlterField(
            model_name='component',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='components', to='bike.componenttype'),
        ),
        migrations.AlterField(
            model_name='component',
            name='notes',
            field=models.TextField(blank=True, max_length=400, null=True),
        ),
        migrations.CreateModel(
            name='MaintActionLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link_url', models.URLField()),
                ('description', models.CharField(blank=True, max_length=50, null=True)),
                ('maint_action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='bike.maintenanceaction')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='component',
            name='previous_distance',
            field=models.FloatField(default=0, help_text='odometer from previous bikes, in distance units from preferences.'),
        ),
        migrations.AddField(
            model_name='component',
            name='start_odo',
            field=models.FloatField(default=0, help_text='odometer when added to this bike, in distance units from preferences.'),
        ),
        migrations.AlterField(
            model_name='ride',
            name='description',
            field=models.TextField(default='missing description', max_length=400),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='component',
            name='subcomponent_of',
            field=models.ForeignKey(blank=True, help_text='Leave blank if this is a direct subcomponent of a bike', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='components', to='bike.component'),
        ),
        migrations.AlterField(
            model_name='odometer',
            name='adjustment_ride',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bike.ride'),
        ),
    ]
